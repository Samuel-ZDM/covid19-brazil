mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
label = h$confirmed_per_100k_inhabitants) %>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Est. GDP (2010)",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
label = h$confirmed_per_100k_inhabitants) %>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Infec. 100k",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
pal <- colorNumeric(
palette = "Accent",
domain = h$confirmed_per_100k_inhabitants
)
mapa <- leaflet(h) %>% addTiles()
mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
label = h$confirmed_per_100k_inhabitants) %>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Infec. 100k",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
shiny::runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
shiny::runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
shiny::runApp('C:/viproject')
runApp()
runApp('C:/viproject')
runApp('C:/viproject')
shiny::runApp('C:/viproject/coronaBrazil')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
runApp('C:/viproject')
shiny::runApp('C:/viproject')
runApp()
runApp('C:/viproject')
runApp()
runApp('C:/viproject')
runApp()
runApp('C:/viproject')
runApp()
runApp('C:/viproject')
runApp()
runApp('C:/viproject')
runApp('C:/viproject')
corona <- read.csv(file="https://brasil.io/dataset/covid19/caso?format=csv")
corona <- as_tibble(corona)
corona <- corona %>%
mutate(date = ymd(date))
corona <- corona %>%
mutate(is_last = ifelse(is_last == "True", TRUE, FALSE))
corona <- corona %>%
filter(place_type == "state")
View(corona)
View(corona)
runApp('C:/viproject')
runApp('C:/viproject/coronaBrazil')
runApp('C:/viproject/coronaBrazil')
corona <- read.csv(file="https://brasil.io/dataset/covid19/caso?format=csv")
corona <- as_tibble(corona)
corona <- corona %>%
mutate(date = ymd(date))
corona <- corona %>%
mutate(is_last = ifelse(is_last == "True", TRUE, FALSE))
corona <- corona %>%
filter(place_type == "state")
runApp('C:/viproject/coronaBrazil')
View(corona)
corona <- read.csv(file="https://data.brasil.io/dataset/covid19/caso.csv.gz")
corona <- as_tibble(corona)
corona <- read.csv("https://data.brasil.io/dataset/covid19/caso.csv.gz")
corona <- read.csv(gzfile("https://data.brasil.io/dataset/covid19/caso.csv.gz"))
corona <- read.csv(gzfile(file="https://data.brasil.io/dataset/covid19/caso.csv.gz"))
con <- gzcon(url(paste("https://data.brasil.io/dataset/covid19/caso.csv.gz", sep="")))
txt <- readLines(con)
corona <- read.csv(textConnection(txt))
View(corona)
corona <- as_tibble(corona)
#if (interactive()) {
# require(conflicted)
#}
library(rgdal) # para ler arquivos shapefiles
library(leaflet)
library(conflicted)
conflict_prefer("filter", "sf")
library(tidyverse)
theme_set(theme_bw())
# Para trabalhar com datas
library(lubridate)
# Para produzir grÃ¡ficos interativos
library(plotly)
library(ggplot2)
library(gplots)
# Mapa do Brasil
library(brazilmaps)
library(RColorBrewer)
display.brewer.all() # mostra as palestas de colores disponiveis no pacote
corona <- as_tibble(corona)
View(corona)
corona <- corona %>%
mutate(date = ymd(date))
corona <- corona %>%
mutate(is_last = ifelse(is_last == "True", TRUE, FALSE))
corona <- corona %>%
filter(place_type == "state")
shiny::runApp('C:/viproject/coronaBrazil')
runApp('C:/viproject/coronaBrazil')
runApp('C:/viproject/coronaBrazil')
runApp('C:/viproject/coronaBrazil')
confi<-corona %>%
group_by(date) %>%
summarise(confirm = sum(confirmed))
View(confi)
runApp('C:/viproject/coronaBrazil')
corona <- read.csv(gzfile(file="https://data.brasil.io/dataset/covid19/caso.csv.gz"))
corona <- as_tibble(corona)
corona <- read.csv(gzfile(file="https://data.brasil.io/dataset/covid19/caso.csv.gz"))
con <- gzcon(url(paste("https://data.brasil.io/dataset/covid19/caso.csv.gz", sep="")))
txt <- readLines(con)
corona <- read.csv(textConnection(txt))
corona <- as_tibble(corona)
corona <- corona %>%
mutate(date = ymd(date))
corona <- corona %>%
mutate(is_last = ifelse(is_last == "True", TRUE, FALSE))
corona <- corona %>%
filter(place_type == "state")
confi<-corona %>%
group_by(date) %>%
summarise(confirm = sum(confirmed))
View(confi)
a<-NROW(confi)
confi$confirm[a]
if((confi$confirm[a]) < confi$confirm[a-1] )
{
confirmedDe<-corona %>%
group_by(date) %>%
filter(date!=(Sys.Date())) %>%
summarise(confirm = sum(confirmed)) %>%
ggplot(., aes(x = date, y = confirm), colour = "blue") +
geom_line() +
labs(x = "Data", y = "Casos Confirmados", colour = "blue") +
scale_colour_viridis_d() +
theme_bw()
ggplotly()
}else{
confirmedDe<-corona %>%
group_by(date) %>%
summarise(confirm = sum(confirmed)) %>%
ggplot(., aes(x = date, y = confirm), colour = "blue") +
geom_line() +
labs(x = "Data", y = "Casos Confirmados", colour = "blue") +
scale_colour_viridis_d() +
theme_bw()
ggplotly()
}
confi$confirm[a]
confi$confirm[a-1]
if((confi$confirm[a]) > confi$confirm[a-1] )
{
confirmedDe<-corona %>%
group_by(date) %>%
filter(date!=(Sys.Date())) %>%
summarise(confirm = sum(confirmed)) %>%
ggplot(., aes(x = date, y = confirm), colour = "blue") +
geom_line() +
labs(x = "Data", y = "Casos Confirmados", colour = "blue") +
scale_colour_viridis_d() +
theme_bw()
ggplotly()
}else{
confirmedDe<-corona %>%
group_by(date) %>%
summarise(confirm = sum(confirmed)) %>%
ggplot(., aes(x = date, y = confirm), colour = "blue") +
geom_line() +
labs(x = "Data", y = "Casos Confirmados", colour = "blue") +
scale_colour_viridis_d() +
theme_bw()
ggplotly()
}
if((confi$confirm[a]) < confi$confirm[a-1] )
{
confirmedDe<-corona %>%
group_by(date) %>%
filter(date!=(Sys.Date())) %>%
summarise(confirm = sum(confirmed)) %>%
ggplot(., aes(x = date, y = confirm), colour = "blue") +
geom_line() +
labs(x = "Data", y = "Casos Confirmados", colour = "blue") +
scale_colour_viridis_d() +
theme_bw()
ggplotly()
}else{
confirmedDe<-corona %>%
group_by(date-1) %>%
summarise(confirm = sum(confirmed)) %>%
ggplot(., aes(x = date, y = confirm), colour = "blue") +
geom_line() +
labs(x = "Data", y = "Casos Confirmados", colour = "blue") +
scale_colour_viridis_d() +
theme_bw()
ggplotly()
}
runApp('C:/viproject/coronaBrazil')
runApp('C:/viproject/coronaBrazil')
shiny::runApp('C:/viproject/coronaBrazil')
h<-corona %>%
select(state)
View(h)
corona <- read.csv(read.csv(file="https://brasil.io/dataset/covid19/caso?format=csv"))
corona <- as_tibble(corona)
corona <- corona %>%
mutate(date = ymd(date))
corona <- corona %>%
mutate(is_last = ifelse(is_last == "True", TRUE, FALSE))
corona <- corona %>%
filter(place_type == "state")
arquivo = "c:\\viproject\\coronaBrazil\\shapes"
shape_br <- readOGR(arquivo, "estados", GDAL1_integer64_policy = TRUE)
plot(shape_br)
hoje <- ymd("2020-04-05")
h<-corona %>%
select(state)
View(h)
corona <- corona %>%
mutate(is_last = ifelse(is_last == "True", TRUE, FALSE))
View(corona)
corona <- corona %>%
filter(place_type == "state")
arquivo = "c:\\viproject\\coronaBrazil\\shapes"
shape_br <- readOGR(arquivo, "estados", GDAL1_integer64_policy = TRUE)
plot(shape_br)
hoje <- ymd("2020-04-05")
h<-corona %>%
select(state)
corona <- read.csv(file="https://brasil.io/dataset/covid19/caso?format=csv")
corona <- as_tibble(corona)
corona <- corona %>%
mutate(date = ymd(date))
corona <- corona %>%
mutate(is_last = ifelse(is_last == "True", TRUE, FALSE))
corona <- corona %>%
filter(place_type == "state")
View(corona)
h<-corona %>%
select(state)
View(corona)
hoje <- ymd("2020-04-13")
h<-corona %>%
filter(date==hoje) %>%
select(state)
View(h)
hoje <- ymd("2020-04-19")
h<-corona %>%
filter(date==hoje) %>%
select(state)
h<-corona %>%
filter(date==hoje) %>%
select(confirmed_per_100k_inhabitants)
View(h)
h<-corona %>%
filter(date==hoje) %>%
select(state)
d<-corona %>%
filter(date==hoje) %>%
select(confirmed_per_100k_inhabitants)
pal <- colorNumeric(
palette = "Accent",
domain = h$confirmed_per_100k_inhabitants
)
h<-corona %>%
filter(date==hoje) %>%
select(confirmed_per_100k_inhabitants,state)
pal <- colorNumeric(
palette = "Accent",
domain = h$confirmed_per_100k_inhabitants
)
mapa <- leaflet(h) %>% addTiles()
mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
label = h$confirmed_per_100k_inhabitants) %>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Infec. 100k",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
mapa <- leaflet(h) %>% addTiles()
mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
if(shape_br@data$sigla == h$state){
label =  h$confirmed_per_100k_inhabitants
} else{
label = 0
}
)%>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Infec. 100k",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
install.packages("compareDF")
mapa <- leaflet(h) %>% addTiles()
mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
label = ~paste(shape_br@data$sigla h$confirmed_per_100k_inhabitants)
)%>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Infec. 100k",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
label = ~paste(shape_br@data$sigla, h$confirmed_per_100k_inhabitants)
)%>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Infec. 100k",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
hoje <- ymd("2020-04-20")
h<-corona %>%
filter(date==hoje) %>%
select(confirmed_per_100k_inhabitants,state)
pal <- colorNumeric(
palette = "Accent",
domain = h$confirmed_per_100k_inhabitants
)
mapa <- leaflet(h) %>% addTiles()
mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
label = ~paste(shape_br@data$sigla, h$confirmed_per_100k_inhabitants)
)%>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Infec. 100k",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
View(h)
hoje <- ymd("2020-04-19")
h<-corona %>%
select(state)
View(h)
h<-corona %>%
filter(date==hoje) %>%
select(state)
View(h)
d<-corona %>%
filter(date==hoje) %>%
select(confirmed_per_100k_inhabitants,state)
ctable_student = compare_df (h,d, c("state"))
library(compareDF)
ctable_student = compare_df (h,d, c("state"))
h<-corona %>%
filter(date==hoje) %>%
select(state)
d<-corona %>%
filter(date==hoje) %>%
select(confirmed_per_100k_inhabitants,state)
ctable_student = compare_df (h,d, c("state"))
if(h$state == d$state)
{
x <- d %>%
select(confirmed_per_100k_inhabitants)
}
View(x)
hoje <- ymd("2020-04-20")
h<-corona %>%
filter(date==hoje) %>%
select(state)
d<-corona %>%
filter(date==hoje) %>%
select(confirmed_per_100k_inhabitants,state)
ctable_student = compare_df (h,d, c("state"))
if(h$state == d$state)
{
x <- d %>%
select(confirmed_per_100k_inhabitants)
}
View(x)
pal <- colorNumeric(
palette = "Accent",
domain = h$confirmed_per_100k_inhabitants
)
h<-corona %>%
filter(date==hoje) %>%
select(confirmed_per_100k_inhabitants,state)
pal <- colorNumeric(
palette = "Accent",
domain = h$confirmed_per_100k_inhabitants
)
mapa <- leaflet(h) %>% addTiles()
mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
label = ~paste(h$confirmed_per_100k_inhabitants)
)%>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Infec. 100k",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
label = ~paste(h)
)%>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Infec. 100k",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
label = ~paste(shape_br@data$sigla==h)
)%>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Infec. 100k",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
for(i in 28)
{
if(h$state[i] == d$state[i])
{
x[i] <- d[i] %>%
select(confirmed_per_100k_inhabitants)
}else{
x[i] <- 0
}
}
for(i in 27)
{
if(h$state[i] == d$state[i])
{
x[i] <- d[i] %>%
select(confirmed_per_100k_inhabitants)
}else{
x[i] <- 0
}
}
d<-corona %>%
filter(date==hoje) %>%
select(state)
h<-corona %>%
filter(date==hoje) %>%
select(confirmed_per_100k_inhabitants,state)
iris_new <- d %>%
mutate(confirmed_per_100k_inhabitants = if_else(state==h$state , h$confirmed_per_100k_inhabitants, 0))
View(iris_new)
d<-corona %>%
filter(date=="2020-04-19") %>%
select(state)
h<-corona %>%
filter(date==hoje) %>%
select(confirmed_per_100k_inhabitants,state)
ctable_student = compare_df (h,d, c("state"))
View(iris_new)
View(d)
View(d)
mapa <- leaflet(h) %>% addTiles()
mapa %>%
addPolygons(data=shape_br,weight=1,col = ~pal(h$confirmed_per_100k_inhabitants),
highlightOptions = highlightOptions(color = "blue", weight = 3,
bringToFront = TRUE),
label = ~paste(if_else(shape_br@data$sigla==h$state , h$confirmed_per_100k_inhabitants, 0) )
)%>%
addLegend("bottomright", pal = pal, values = h$confirmed_per_100k_inhabitants,
title = "Infec. 100k",
#labFormat = labelFormat(prefix = "$"),
opacity = 1)
runApp('C:/viproject/coronaBrazil')
runApp('C:/viproject/coronaBrazil')
runApp('C:/viproject/coronaBrazil')
runApp('C:/viproject/coronaBrazil')
runApp('C:/viproject/coronaBrazil')
runApp('C:/viproject/coronaBrazil')
